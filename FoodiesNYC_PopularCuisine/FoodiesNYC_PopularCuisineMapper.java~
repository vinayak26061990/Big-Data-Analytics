import java.io.*;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.lang.*;


public class FoodiesNYC_PopularCuisineMapper extends Mapper<LongWritable,Text,Text,Text>
{
	@Override
	public void map(LongWritable key,Text value,Context context) throws IOException,InterruptedException {
		String line=value.toString();
		String[] splitted =line.split(",");
		if(splitted.length > 9)
		{ 
			String cuisines = splitted[9];
			String rating = splitted[4];
			String totalNumberOfVotes = splitted[3];

		
			if(cuisines != null && !cuisines.isEmpty() && rating != null && !rating.isEmpty() && rating != "0" && totalNumberOfVotes != null && !totalNumberOfVotes.isEmpty() && totalNumberOfVotes != "0" && totalNumberOfVotes.matches("\\d+") )
			{
				String[] cuisine = cuisines.split("\\|");
				if(cuisine.length > 0)
				{
					for (int i=0;i<cuisine.length;i++)
      					{ 
						context.write(new Text(cuisine[i].trim()),new Text(rating + "#" + totalNumberOfVotes ));
					}
				}
				
			
			}
		
		}
	}
}

